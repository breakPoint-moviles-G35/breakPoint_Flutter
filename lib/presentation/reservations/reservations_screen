import 'package:flutter/material.dart';
import 'package:provider/provider.dart';
import 'package:breakpoint/routes/app_router.dart';
import 'package:breakpoint/presentation/widgets/offline_banner.dart';
import 'package:breakpoint/presentation/widgets/space_card.dart';
import 'package:breakpoint/presentation/reservations/viewmodel/reservations_viewmodel.dart';
import 'package:breakpoint/domain/entities/reservation.dart';

class ReservationsScreen extends StatelessWidget {
  const ReservationsScreen({super.key});

  @override
  Widget build(BuildContext context) {
    final vm = context.watch<ReservationsViewModel>();
    vm.init();

    return Scaffold(
      appBar: AppBar(
        title: const Text('Mis Reservas Activas'),
        centerTitle: true,
        actions: [
          if (vm.isOffline)
            const Padding(
              padding: EdgeInsets.only(right: 8.0),
              child: Icon(Icons.cloud_off, color: Colors.redAccent),
            ),
        ],
      ),
      body: Column(
        children: [
          // ðŸ”¹ Banner de desconexiÃ³n
          AnimatedSwitcher(
            duration: const Duration(milliseconds: 250),
            child: vm.isOffline
                ? OfflineBanner(onRetry: vm.retry)
                : const SizedBox.shrink(),
          ),

          Expanded(
            child: Builder(builder: (_) {
              if (vm.isLoading) {
                return const Center(child: CircularProgressIndicator());
              }

              if (vm.error != null && vm.reservations.isEmpty) {
                return Center(child: Text(vm.error!));
              }

              if (vm.reservations.isEmpty) {
                return const Center(
                  child: Text('No tienes reservas activas.'),
                );
              }

              return ListView.separated(
                padding: const EdgeInsets.fromLTRB(12, 8, 12, 12),
                itemCount: vm.reservations.length,
                separatorBuilder: (_, __) => const SizedBox(height: 16),
                itemBuilder: (context, i) {
                  final r = vm.reservations[i];
                  return Column(
                    children: [
                      SpaceCard(
                        title: r.spaceTitle,
                        subtitle:
                            '${r.formattedDate} â€¢ ${r.formattedTimeRange}',
                        rating: 0,
                        priceCOP: r.totalAmount,
                        rightTag: r.statusText,
                        imageAspectRatio: 16 / 9,
                        imageUrl: r.spaceImageUrl,
                        onTap: () {},
                      ),
                    ],
                  );
                },
              );
            }),
          ),
        ],
      ),
      bottomNavigationBar: NavigationBar(
        selectedIndex: 2,
        onDestinationSelected: (i) {
          if (i == 0) {
            Navigator.pushReplacementNamed(context, AppRouter.explore);
          } else if (i == 1) {
            Navigator.pushReplacementNamed(context, AppRouter.rate);
          } else if (i == 3) {
            Navigator.pushReplacementNamed(context, AppRouter.profile);
          }
        },
        destinations: const [
          NavigationDestination(icon: Icon(Icons.search), label: 'Explore'),
          NavigationDestination(
              icon: Icon(Icons.chat_bubble_outline), label: 'Rate'),
          NavigationDestination(
              icon: Icon(Icons.event_note_outlined), label: 'Reservations'),
          NavigationDestination(icon: Icon(Icons.person), label: 'Profile'),
        ],
      ),
    );
  }
}
